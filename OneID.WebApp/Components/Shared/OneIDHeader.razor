@inject IHttpContextAccessor HttpContextAccessor
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation

<div class="custom-header">
    <div class="header-left-fixed" style="display: flex; align-items: center; gap: 0.8rem;">

        <a href="/dashboard" class="logo-wrapper" style="display: flex; align-items: center; gap: 0.4rem;">
            <img src="img/logo_one_id_prata_icone.png" alt="OneID Logo" width="26" height="26" />
            <span style="color: var(--text-muted); font-weight: 700;">OneID</span>
        </a>

        <span class="pipe-divider" style="color: #555;">|</span>

        <button class="menu-launcher-wrapper" @onclick="ToggleLauncher" style="background: none; border: none; padding: 0; cursor: pointer;">
            <svg xmlns="http://www.w3.org/2000/svg"
                 width="22" height="22" viewBox="0 0 24 24"
                 fill="var(--text-muted)">
                <circle cx="5" cy="5" r="2" />
                <circle cx="12" cy="5" r="2" />
                <circle cx="19" cy="5" r="2" />
                <circle cx="5" cy="12" r="2" />
                <circle cx="12" cy="12" r="2" />
                <circle cx="19" cy="12" r="2" />
                <circle cx="5" cy="19" r="2" />
                <circle cx="12" cy="19" r="2" />
                <circle cx="19" cy="19" r="2" />
            </svg>
        </button>

        <div class="search-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" width="16" height="16"
                 fill="none" stroke="var(--highlight-color)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                 viewBox="0 0 24 24">
                <circle cx="11" cy="11" r="8" />
                <line x1="21" y1="21" x2="16.65" y2="16.65" />
            </svg>
            <input type="text"
                   placeholder="Search"
                   class="search-input"
                   @oninput="OnSearchInput" />
        </div>
    </div>

    <div class="header-right">
        <div class="email"><strong>@Email</strong></div>
        <div class="account-id">Conta: <span class="account-id-value">@AccountId</span></div>
    </div>
</div>

<ServiceLauncher IsVisible="@showLauncher" Toggle="ToggleLauncher" />

@code {

    private string Email = "desconhecido@oneid.com";
    private string AccountId = "N/A";
    private bool showLauncher = false;
    private bool loaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !loaded)
        {
            var token = HttpContextAccessor.HttpContext?.Request.Cookies["access_token"];
            if (!string.IsNullOrWhiteSpace(token))
            {
                var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();

                try
                {
                    var jwt = handler.ReadJwtToken(token);
                    Email = jwt.Claims.FirstOrDefault(c => c.Type == "email")?.Value ?? Email;
                    AccountId = jwt.Claims.FirstOrDefault(c => c.Type == "account_id")?.Value ?? AccountId;
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Erro ao ler token: {ex.Message}");
                }
            }

            loaded = true;
            StateHasChanged();

            await Task.CompletedTask;
        }
    }

    private void ToggleLauncher()
    {
        showLauncher = !showLauncher;
    }

    private Task CloseLauncher()
    {
        showLauncher = false;
        return Task.CompletedTask;
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        var input = e.Value?.ToString();
        Console.WriteLine($"Buscando: {input}");
    }
}
