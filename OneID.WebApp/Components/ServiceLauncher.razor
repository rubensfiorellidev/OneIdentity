@inject NavigationManager Navigation

@if (IsVisible)
{
    <div class="service-launcher-overlay" @onclick="Toggle">
        <div class="service-launcher-panel" @onclick:stopPropagation>
            <div class="launcher-container">
                <div class="launcher-item" @onclick='() => NavigateToExternal("https://localhost:5001/manual-admission")'>➕ Nova Admissão</div>
                <div class="launcher-item" @onclick='() => NavigateToExternal("https://localhost:5001/ongoing-processes")'>📄 Processos em andamento</div>
                <div class="launcher-item" @onclick='() => NavigateToExternal("https://localhost:5001/usuarios")'>👥 Usuários ativos</div>
                <div class="launcher-item" @onclick='() => NavigateToExternal("https://localhost:5001/roles")'>🛡️ Gerenciar roles</div>
            </div>
        </div>
    </div>
}

@code {
    [Inject] private NavigationManager NavManager { get; set; } = default!;

    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback Toggle { get; set; }

     private void NavigateInternal(string route)
    {
        NavManager.NavigateTo(route);
    }

    private void NavigateToExternal(string url)
    {
        NavManager.NavigateTo(url, forceLoad: true);
    }
}

